{"ast":null,"code":"var _jsxFileName = \"/Users/artortega/Desktop/art-battleship/src/components/Board.js\";\nimport React, { Component } from 'react';\nimport Square from './Square';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBoard = index => {};\n\n    this.resetGame = () => {};\n\n    this.randomize = () => {\n      let {\n        compBoard,\n        userBoard,\n        compBoardHide,\n        userBoardHide\n      } = this.state;\n      let randomCompBH1 = Math.ceil(Math.random() * compBoardHide.length);\n      let randomCompBH2 = MAth.ceil(MAth.random() * compBoardHide.length);\n\n      while (randomCompBH1 === randomCompBH2) {\n        randomCompBH2 = Math.ceil(Math.random() * compBoardHide.length);\n      }\n\n      let randomUserBH1 = Math.ceil(Math.random() * userBoardHide.length);\n      let randomUserBH2 = Math.ceil(Math.random() * userBoardHide.length);\n\n      while (randomUserBH1 === randomUserBH2) {\n        randomUserBH2 = Math.ceil(Math.random() * userBoardHide.length);\n      }\n    };\n\n    this.state = {\n      compBoard: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      userBoard: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      compBoardHide: [\"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\"],\n      userBoardHide: [\"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\"],\n      counter: 0,\n      userStatus: \"\"\n    };\n  }\n\n  render() {\n    let {\n      compBoard,\n      userBoard,\n      counter,\n      userStatus\n    } = this.state;\n    let compB = compBoard.map((value, index) => React.createElement(Square, {\n      handleBoard: this.handleBoard,\n      randomize: this.randomize,\n      index: index,\n      value: value,\n      counter: counter,\n      userStatus: userStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n    let userB = userBoard.map((value, index) => React.createElement(Square, {\n      index: index,\n      value: value,\n      handleBoard: this.handleBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"You have: \", 4 - this.state.counter, \" tries\"), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, compB), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.userStatus));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/artortega/Desktop/art-battleship/src/components/Board.js"],"names":["React","Component","Square","Board","constructor","props","handleBoard","index","resetGame","randomize","compBoard","userBoard","compBoardHide","userBoardHide","state","randomCompBH1","Math","ceil","random","length","randomCompBH2","MAth","randomUserBH1","randomUserBH2","counter","userStatus","render","compB","map","value","userB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Square from './Square'\nclass Board extends Component {\n    constructor(props) {\n        super(props)\n          this.state = { \n          compBoard: [\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\"],\n          userBoard:[\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\",\n                      \"\", \"\", \"\", \"\", \"\"],\n          compBoardHide:[\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\"],\n          userBoardHide:[\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\",\n                      \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\", \"ðŸ¤ª\"],\n          counter: 0,\n          userStatus: \"\"\n        }\n    }\n    handleBoard = (index) => {\n\n\n    }\n\n    resetGame = () =>{\n\n    }\n//\n\n    randomize = () => {\n      let {compBoard,userBoard,compBoardHide,userBoardHide} = this.state\n\n      let randomCompBH1 = Math.ceil(Math.random()* compBoardHide.length)\n      let randomCompBH2 = MAth.ceil(MAth.random()* compBoardHide.length)\n        while(randomCompBH1 === randomCompBH2){\n          randomCompBH2 = Math.ceil(Math.random()* compBoardHide.length)\n        }\n      let randomUserBH1 = Math.ceil(Math.random() * userBoardHide.length)\n      let randomUserBH2 = Math.ceil(Math.random() * userBoardHide.length)\n        while(randomUserBH1 === randomUserBH2){\n          randomUserBH2 = Math.ceil(Math.random()* userBoardHide.length)\n        }\n\n      \n    }\n\n  render() {\n    let {compBoard,userBoard,counter,userStatus} = this.state\n    let compB = compBoard.map((value, index) => \n        <Square\n          handleBoard = {this.handleBoard}\n          randomize = {this.randomize}\n          index = { index } \n          value = { value }\n          counter = {counter}\n          userStatus = {userStatus}\n        /> )\n    let userB = userBoard.map((value, index)=> \n        <Square \n          index = {index}\n          value = {value}\n          handleBoard = {this.handleBoard}\n        />\n        )\n\n    return (\n     <div>\n        <p>You have: {4-this.state.counter} tries</p>\n        <div className = \"board\">\n        {compB}\n        </div>\n        <p>{this.state.userStatus}</p>\n      </div>\n    );\n  }\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}