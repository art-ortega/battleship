{"ast":null,"code":"var _jsxFileName = \"/Users/artortega/Desktop/art-battleship/src/components/Board.js\";\nimport React, { Component } from 'react';\nimport Square from './Square';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocation = index => {};\n\n    this.resetGame = () => {};\n\n    this.randomizer = () => {};\n\n    this.state = {\n      compBoard: [\"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\"],\n      display: [\"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\"],\n      counter: 0,\n      userStatus: \"\"\n    };\n  }\n\n  render() {\n    let {\n      spaces,\n      display,\n      counter,\n      userStatus\n    } = this.state;\n    let compBoard = compBoard.map((value, index) => React.createElement(Square, {\n      handleLocation: this.handleLocation,\n      randomize: this.randomize,\n      index: index,\n      value: value,\n      counter: counter,\n      userStatus: userStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"You have: \", 4 - this.state.counter, \" tries\"), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, compBoard), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.userStatus));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/artortega/Desktop/art-battleship/src/components/Board.js"],"names":["React","Component","Square","Board","constructor","props","handleLocation","index","resetGame","randomizer","state","compBoard","display","counter","userStatus","render","spaces","map","value","randomize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,cATmB,GASDC,KAAD,IAAW,CAG3B,CAZkB;;AAAA,SAcnBC,SAdmB,GAcP,MAAK,CAEhB,CAhBkB;;AAAA,SAmBnBC,UAnBmB,GAmBN,MAAM,CAElB,CArBkB;;AAEb,SAAKC,KAAL,GAAa;AACbC,MAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CADE;AAEbC,MAAAA,OAAO,EAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAFK;AAGbC,MAAAA,OAAO,EAAE,CAHI;AAIbC,MAAAA,UAAU,EAAE;AAJC,KAAb;AAML;;AAeHC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACC,MAAAA,MAAD;AAAQJ,MAAAA,OAAR;AAAgBC,MAAAA,OAAhB;AAAwBC,MAAAA;AAAxB,QAAsC,KAAKJ,KAA/C;AACA,QAAIC,SAAS,GAAGA,SAAS,CAACM,GAAV,CAAc,CAACC,KAAD,EAAQX,KAAR,KAC1B,oBAAC,MAAD;AACA,MAAA,cAAc,EAAI,KAAKD,cADvB;AAEA,MAAA,SAAS,EAAI,KAAKa,SAFlB;AAGA,MAAA,KAAK,EAAKZ,KAHV;AAIA,MAAA,KAAK,EAAKW,KAJV;AAKA,MAAA,OAAO,EAAIL,OALX;AAMA,MAAA,UAAU,EAAIC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,CAAhB;AAWA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,IAAE,KAAKJ,KAAL,CAAWG,OAA3B,WADH,EAEG;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,SADD,CAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWI,UAAf,CALH,CADD;AASD;;AA9C2B;;AAiD9B,eAAeX,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Square from './Square'\nclass Board extends Component {\n    constructor(props) {\n        super(props)\n          this.state = { \n          compBoard: [\"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\", \"❓\"],\n          display:[\"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\", \"🌴\"],\n          counter: 0,\n          userStatus: \"\"\n        }\n    }\n    handleLocation = (index) => {\n\n\n    }\n\n    resetGame = () =>{\n\n    }\n//creating method to get our random treasure and bomb locations\n\n    randomizer = () => {\n\n    }\n\n  render() {\n    let {spaces,display,counter,userStatus} = this.state\n    let compBoard = compBoard.map((value, index) => \n        <Square\n        handleLocation = {this.handleLocation}\n        randomize = {this.randomize}\n        index = { index } \n        value = { value }\n        counter = {counter}\n        userStatus = {userStatus}\n        /> )\n  \n\n    return (\n     <div>\n        <p>You have: {4-this.state.counter} tries</p>\n        <div className = \"board\">\n        {compBoard}\n        </div>\n        <p>{this.state.userStatus}</p>\n      </div>\n    );\n  }\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}